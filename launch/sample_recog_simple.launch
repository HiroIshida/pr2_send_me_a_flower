<!-- -*- mode: xml -*- -->
<launch>
  <!--
  $ roslaunch openni_launch openni.launch    ;; start kinect camera
  $ rosrun rqt_reconfigure rqt_reconfigure   ;; parameter settings
  $ roslaunch jsk_pcl_ros hsi_color_filter.launch DEFAULT_NAMESPACE:=/camera/depth_registered INPUT:=points
  $ roslaunch sample_recog.launch DEFAULT_NAMESPACE:=/camera/depth_registered INPUT:=points
  * subscribe camera/depth_registered/hsi_output
  * subscribe tf and find /target
  -->

  <arg name="FILTER_NAME_SUFFIX" default=""/>
  <arg name="OUTPUT" default="hsi_output$(arg FILTER_NAME_SUFFIX)"/>

  <arg name="h_max" default="3" />
  <arg name="h_min" default="-128" />
  <arg name="s_max" default="99" />
  <arg name="s_min" default="0" />
  <arg name="i_max" default="255" />
  <arg name="i_min" default="0" />

  <arg name="create_manager" default="true" />
  <arg name="manager" default="hsi_filter_manager$(arg FILTER_NAME_SUFFIX)" />

    <node if="$(arg create_manager)"
          pkg="nodelet" type="nodelet" name="$(arg manager)"
          args="manager" output="screen"/>

    <node pkg="nodelet" type="nodelet" name="zfilter"
	  args="load pcl/PassThrough $(arg manager)" output="screen">
      <remap from="~input" to="/kinect_head/depth_registered/points"/>
      <rosparam>
        filter_field_name: z
        filter_limit_min: 0.0
        filter_limit_max: 1.5
      </rosparam>
    </node>

  <node name="plane_extraction" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/MultiPlaneExtraction $(arg manager)"
        output="screen"
        >
    <remap from="~input" to="input_relay/output" />
    <remap from="~indices" to="/multi_plane_estimate/output_refined" />
    <remap from="~input_polygons" to="/multi_plane_estimate/output_refined_polygon" />
    <remap from="~input_coefficients" to="/multi_plane_estimate/output_refined_coefficients" />
    <rosparam subst_value="true">
      use_sensor_frame: true
      sensor_frame: $(arg sensor_frame)
      min_height: 0.03
    </rosparam>
  </node>


    <node pkg="nodelet" type="nodelet" name="hsi_filter$(arg FILTER_NAME_SUFFIX)"
          args="load jsk_pcl/HSIColorFilter $(arg manager)" output="screen">
      <remap from="~input" to="zfilter/output" />
      <remap from="~output" to="/hsi_filter/output"/>
      <rosparam>
        use_indices: false
        keep_organized: false
      </rosparam>
      <param name="h_limit_max" value="$(arg h_max)" />
      <param name="h_limit_min" value="$(arg h_min)" />
      <param name="s_limit_max" value="$(arg s_max)" />
      <param name="s_limit_min" value="$(arg s_min)" />
      <param name="i_limit_max" value="$(arg i_max)" />
      <param name="i_limit_min" value="$(arg i_min)" />
    </node>

    <node pkg="nodelet" type="nodelet" name="euclidean_clustering$(arg FILTER_NAME_SUFFIX)"
          args="load jsk_pcl/EuclideanClustering $(arg manager)" output="screen">
      <remap from="~input" to="/hsi_filter/output" />
      <rosparam>
        tolerance: 0.02
        min_size: 100
      </rosparam>
    </node>

    <node pkg="nodelet" type="nodelet"
          name="cluster_decomposer$(arg FILTER_NAME_SUFFIX)"
          args="load jsk_pcl/ClusterPointIndicesDecomposerZAxis $(arg manager)"
          output="screen" clear_params="true">
      <remap from="~input" to="/hsi_filter/output" />
      <remap from="~target" to="euclidean_clustering$(arg FILTER_NAME_SUFFIX)/output" />
      <remap from="~debug_output" to="debug_output$(arg FILTER_NAME_SUFFIX)" />
      <remap from="~boxes" to="boxes$(arg FILTER_NAME_SUFFIX)" />
      <rosparam>
      </rosparam>
    </node>

    <node pkg="jsk_interactive_marker" type="bounding_box_marker"
          name="bounding_box_marker">
      <remap from="~bounding_box_array" to="boxes$(arg FILTER_NAME_SUFFIX)" />
    </node>


</launch>
